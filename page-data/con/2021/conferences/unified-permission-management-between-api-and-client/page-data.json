{"componentChunkName":"component---src-components-con-2021-templates-conference-template-tsx","path":"/con/2021/conferences/unified-permission-management-between-api-and-client/","result":{"pageContext":{"html":"<h1 id=\"unified-permission-management-between-api-and-client\" style=\"position:relative;\"><a href=\"#unified-permission-management-between-api-and-client\" aria-label=\"unified permission management between api and client permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unified permission management between API and client</h1>\n<p>API Platform offers the possibility of creating robust and modular applications, however it is common to require a permissions system to manage users and their abilities.</p>\n<p>I will present in this talk <strong>my implementation to operate an advanced permissions system based on multiple criterias</strong>, in a unified way. This allows flexible and automatic management of both the security of the API (access control for resources, automatic filters, etc.) but also the security of the client (in <strong>Vue.js</strong>), to control the UI and its functionalities according to the current user's rights, transparent hot reload of permissions included in case of modifications!</p>","type":"conference","speakers":"-marion","track":"FR","start":"","end":"","short":"Discover Marion's implementation to operate advanced permissions","title":"Unified permission management between API and client"}},"staticQueryHashes":["2622028926","2760183193"]}